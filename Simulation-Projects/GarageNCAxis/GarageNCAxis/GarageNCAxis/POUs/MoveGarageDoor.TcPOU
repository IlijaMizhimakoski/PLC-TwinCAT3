<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MoveGarageDoor" Id="{bdd996a8-9082-46e2-b8c7-666d28e05c38}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK MoveGarageDoor
VAR_INPUT
	bActuationProgram : BOOL; //actuation button for moving the door
	bError : BOOL; //input error
END_VAR
VAR_OUTPUT
	bClosed : BOOL; //sensor that indicates whether or not the door is closed
	bOpened : BOOL; //sensor that indicates whether or not the door is opened
	bDriveOverload : BOOL; //sensor that indicates whether or not there is an error
	bPaused : BOOL; //sensor that indicates that the door is paused
	bLight : BOOL; //light that shows there is motion
	fActPos : LREAL; //actual position of the axis
	
	bVis1O : BOOL;
	bVis2O : BOOL;
	bVis3O : BOOL;
	bVis1C : BOOL;
	bVis2C : BOOL;
	bErrorImg : BOOL;
	bPauseImg : BOOL;

END_VAR
VAR
	bInitialActivate : BOOL; //helps set the door to closed at the start
	
	fbActivate : R_TRIG;
	fbInitial : R_TRIG; //helps set the initial value to closed
	
	bActuation : BOOL; //works with the actuation program inside of the function block
	
	iState : UDINT;
	
	Actuator : AXIS_REF; //we refrence the axis
	McPower : MC_Power; //power and reset function blocks for the axis
	McReset : MC_Reset;
	McMove : MC_MoveAbsolute;
	McStop : MC_Stop;

	
	bTempC : BOOL; //helps determine what was the door doing before pause/error
	bTempO : BOOL;
	
	fbBlinker : Blinker;
	

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[bInitialActivate := TRUE; //we close the door at the start
fbInitial(CLK := TRUE);
IF fbInitial.Q THEN
	bClosed := TRUE; //we have set the door to closed at the start (only activates the first time we run the program
END_IF

CASE iState OF
	0:	
		IF McPower.Status THEN
			iState := 10;
		END_IF
	5: //turning actuation off
		bActuation := FALSE;
		iState := 0; //return to the first state
	10:
		fbActivate(CLK := bActuationProgram);
		IF fbActivate.Q THEN
			bActuation := TRUE;
		END_IF
		bTempO := FALSE;
		bTempC := FALSE;
		IF bActuation THEN
			iState := 20; //if we click the button go to the next state and check it's state
		END_IF
	15:
		bActuation := FALSE;
		iState := 100;	
	20:
		IF bClosed THEN
			iState := 40; //open state
		ELSIF bOpened THEN
			iState := 50; //close state
		ELSE
			iState := 999;// driveoverload state
		END_IF
	30:
		bActuation := FALSE;
		iState := 999;
	40: //the door is closed we open it
		bClosed := FALSE;	
		IF bActuation THEN
			bLight := TRUE;
			bTempO := TRUE;
			McMove(Axis := Actuator, //we open the door (100 means openned)
					Position := 1000,
					Velocity := 100,
					Acceleration := 100,
					Deceleration := 100,
					Jerk := 100000,
					Execute := TRUE);
			iState := 45;	
		END_IF
	45:	//check if the movement is done
		fbActivate(CLK := bActuationProgram); //incase we want to pause it
		IF fbActivate.Q THEN
			bActuation := FALSE;
		END_IF
		IF bError THEN
			iState := 30; //incase the door goes to error
		END_IF
		IF bActuation THEN	
			IF McMove.Done AND NOT McMove.Error THEN
				McMove(Axis := Actuator,Execute := FALSE); //we turn it off
				bOpened := TRUE;
				bLight := FALSE;
				iState := 5;
			END_IF
		ELSE
			bPaused := TRUE;
			iState := 15;	
		END_IF
	50: //door is opened we close it
		bOpened := FALSE;	
		IF bActuation THEN
			bLight := TRUE;
			bTempC := TRUE;
			McMove(Axis := Actuator, //we close the door  (0 means openned)
					Position := 0,
					Velocity := 100,
					Acceleration := 100,
					Deceleration := 100,
					Jerk := 100000,
					Execute := TRUE);
			iState := 55; //check if the movement is done
		END_IF	
	55: //check if the movement is done
		fbActivate(CLK := bActuationProgram); //incase we want to pause it
		IF fbActivate.Q THEN
			bActuation := FALSE;
		END_IF
		IF bError THEN
			iState := 30; //incase the door goes to error
		END_IF
		IF bActuation THEN
			
	
			IF McMove.Done AND NOT McMove.Error THEN
				McMove(Axis := Actuator,Execute := FALSE); //we turn it off
				bClosed := TRUE;
				bLight := FALSE;
				iState := 5;
			END_IF
		ELSE
			bPaused := TRUE;
			iState := 15;	
		END_IF
		
	100: //pause state
		//bVis1O := FALSE;
		//bVis2O := FALSE;
		//bVis3O := FALSE;
		//bVis1C := FALSE;
		//bVis2C := FALSE;
		//bPauseImg := TRUE;
		
		bLight := FALSE;
		fbActivate(CLK := bActuationProgram);		
		IF fbActivate.Q THEN
			bActuation := TRUE;
			bPaused := FALSE; //we turn off the pause light
		END_IF
		McStop(Axis := Actuator,
				Deceleration := 300,
				Execute := TRUE);
		IF bActuation AND bTempC THEN
			bLight := TRUE;
			bTempC := FALSE;
			McStop(Axis := Actuator,Execute := FALSE);
			McMove(Axis := Actuator,Execute := FALSE);
			iState := 40;
		ELSIF bActuation AND bTempO THEN
			bLight := TRUE;
			bTempO := FALSE;
			McStop(Axis := Actuator,Execute := FALSE);
			McMove(Axis := Actuator,Execute := FALSE);
			iState := 50;	
		END_IF
				


	999: //error state	
		bErrorImg := TRUE;
		
		bLight := fbBlinker.bBlink;
		fbBlinker();
		bDriveOverload := TRUE;
		fbActivate(CLK := bActuationProgram);		
		IF fbActivate.Q THEN
			bActuation := TRUE;
			bPaused := FALSE; //we turn off the pause light
		END_IF
		McStop(Axis := Actuator,
				Deceleration := 300,
				Execute := TRUE);
		IF bActuation AND bTempC THEN
			bErrorImg := FALSE;
			bDriveOverload := FALSE;
			bLight := TRUE;
			bTempC := FALSE;
			McStop(Axis := Actuator,Execute := FALSE);
			McMove(Axis := Actuator,Execute := FALSE);
			iState := 40;
		ELSIF bActuation AND bTempO THEN
			bErrorImg := FALSE;
			bDriveOverload := FALSE;
			bLight := TRUE;
			bTempO := FALSE;
			McStop(Axis := Actuator,Execute := FALSE);
			McMove(Axis := Actuator,Execute := FALSE);
			iState := 50;	
		END_IF
		
END_CASE
Actuator.ReadStatus(); //referencing the axis to the function blocks
McPower(Axis := Actuator,Enable := TRUE,Enable_Positive := TRUE,Enable_Negative := TRUE);
McReset(Axis := Actuator);
McMove(Axis := Actuator);
McStop(Axis := Actuator);

fActPos := Actuator.NcToPlc.ActPos;

IF bTempO THEN
	//bErrorImg := FALSE;
	//bPauseImg := FALSE;
	bVis1C := FALSE;
	bVis2C := FALSE;
	IF fActPos > 180.0 THEN
		bVis1O := TRUE;
	END_IF
	IF fActPos > 550.0 THEN
		bVis2O := TRUE;
		bVis1O := FALSE;
	END_IF
	IF fActPos > 850.0 THEN
		bVis2O := FALSE;
		bVis3O := TRUE;
	END_IF
END_IF

IF bTempC THEN
	//bErrorImg := FALSE;
	//bPauseImg := FALSE;
	bVis1O := FALSE;
	bVis2O := FALSE;
	IF fActPos < 850.0 THEN
		bVis1C := TRUE;
		bVis3O := FALSE;
	END_IF
	IF fActPos < 550.0 THEN
		bVis2C := TRUE;
		bVis1C := FALSE;
	END_IF
	IF fActPos < 180.0 THEN
		bVis2C := FALSE;
	END_IF
END_IF]]></ST>
    </Implementation>
    <LineIds Name="MoveGarageDoor">
      <LineId Id="15" Count="3" />
      <LineId Id="9" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="70" Count="2" />
      <LineId Id="84" Count="2" />
      <LineId Id="69" Count="0" />
      <LineId Id="29" Count="3" />
      <LineId Id="511" Count="1" />
      <LineId Id="33" Count="1" />
      <LineId Id="28" Count="0" />
      <LineId Id="355" Count="2" />
      <LineId Id="38" Count="7" />
      <LineId Id="385" Count="0" />
      <LineId Id="388" Count="0" />
      <LineId Id="387" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="75" Count="1" />
      <LineId Id="87" Count="0" />
      <LineId Id="120" Count="6" />
      <LineId Id="95" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="291" Count="2" />
      <LineId Id="290" Count="0" />
      <LineId Id="295" Count="1" />
      <LineId Id="294" Count="0" />
      <LineId Id="313" Count="0" />
      <LineId Id="316" Count="8" />
      <LineId Id="302" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="112" Count="1" />
      <LineId Id="107" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="129" Count="6" />
      <LineId Id="128" Count="0" />
      <LineId Id="140" Count="1" />
      <LineId Id="287" Count="2" />
      <LineId Id="286" Count="0" />
      <LineId Id="298" Count="1" />
      <LineId Id="297" Count="0" />
      <LineId Id="306" Count="2" />
      <LineId Id="143" Count="1" />
      <LineId Id="148" Count="0" />
      <LineId Id="146" Count="1" />
      <LineId Id="145" Count="0" />
      <LineId Id="310" Count="2" />
      <LineId Id="309" Count="0" />
      <LineId Id="280" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="454" Count="4" />
      <LineId Id="453" Count="0" />
      <LineId Id="459" Count="0" />
      <LineId Id="360" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="151" Count="2" />
      <LineId Id="150" Count="0" />
      <LineId Id="327" Count="0" />
      <LineId Id="329" Count="0" />
      <LineId Id="328" Count="0" />
      <LineId Id="330" Count="2" />
      <LineId Id="353" Count="0" />
      <LineId Id="359" Count="0" />
      <LineId Id="340" Count="3" />
      <LineId Id="354" Count="0" />
      <LineId Id="358" Count="0" />
      <LineId Id="351" Count="1" />
      <LineId Id="188" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="448" Count="0" />
      <LineId Id="460" Count="0" />
      <LineId Id="362" Count="0" />
      <LineId Id="383" Count="0" />
      <LineId Id="389" Count="0" />
      <LineId Id="363" Count="8" />
      <LineId Id="463" Count="0" />
      <LineId Id="390" Count="0" />
      <LineId Id="372" Count="5" />
      <LineId Id="464" Count="0" />
      <LineId Id="391" Count="0" />
      <LineId Id="378" Count="4" />
      <LineId Id="361" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="54" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="326" Count="0" />
      <LineId Id="277" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="400" Count="0" />
      <LineId Id="399" Count="0" />
      <LineId Id="451" Count="0" />
      <LineId Id="462" Count="0" />
      <LineId Id="418" Count="0" />
      <LineId Id="420" Count="0" />
      <LineId Id="401" Count="0" />
      <LineId Id="403" Count="1" />
      <LineId Id="406" Count="1" />
      <LineId Id="423" Count="0" />
      <LineId Id="405" Count="0" />
      <LineId Id="409" Count="0" />
      <LineId Id="424" Count="0" />
      <LineId Id="410" Count="0" />
      <LineId Id="408" Count="0" />
      <LineId Id="402" Count="0" />
      <LineId Id="426" Count="1" />
      <LineId Id="452" Count="0" />
      <LineId Id="461" Count="0" />
      <LineId Id="428" Count="1" />
      <LineId Id="431" Count="1" />
      <LineId Id="442" Count="0" />
      <LineId Id="433" Count="6" />
      <LineId Id="441" Count="0" />
      <LineId Id="425" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>